# -*- coding: utf-8 -*-
"""Triagem-Helpdesk.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ReRiMyKpQlG5n9fhpTWSAGWMLAE9s4Zu
"""

!pip install -q --upgrade langchain langchain-google-genai google-generativeai

from google.colab import userdata
from langchain_google_genai import ChatGoogleGenerativeAI
from pydantic import BaseModel, Field
from typing import List, Literal, Dict
from langchain_core.messages import SystemMessage, HumanMessage

GOOGLE_API_KEY = userdata.get('GEMINI_API_KEY')

llm_helpdesk = ChatGoogleGenerativeAI(
    model="gemini-2.5-flash",
    temperature=0,
    api_key=GOOGLE_API_KEY
)

HELPDESK_PROMPT = (
    "Você é um triador de chamados de SUPORTE TÉCNICO (helpdesk). "
    "Dada a mensagem do usuário, retorne SOMENTE um JSON no formato abaixo:\n"
    "{\n"
    '  "decisao": "REINICIAR_PC" | "CHAMAR_SUPORTE" | "EXPLICAR_PASSO",\n'
    '  "urgencia": "BAIXA" | "MEDIA" | "ALTA",\n'
    '  "campos_faltantes": ["..."]\n'
    "}\n"
    "Regras:\n"
    '- **REINICIAR_PC**: Quando o problema é simples e provavelmente resolvido reiniciando o computador ou o sistema.\n'
    '- **EXPLICAR_PASSO**: Quando o problema tem solução simples com instruções (ex: recuperar senha, configurar Wi-Fi).\n'
    '- **CHAMAR_SUPORTE**: Quando envolve falhas graves (ex: rede inteira fora do ar, hardware quebrado, sistemas críticos).\n'
    "Classifique também a urgência: "
    "- **ALTA** se o problema impede o trabalho ou afeta várias pessoas.\n"
    "- **MEDIA** se afeta uma tarefa importante mas tem alternativa temporária.\n"
    "- **BAIXA** se é apenas dúvida ou algo não urgente.\n"
)

class HelpdeskOut(BaseModel):
    decisao: Literal['REINICIAR_PC', 'CHAMAR_SUPORTE', 'EXPLICAR_PASSO']
    urgencia: Literal['BAIXA', 'MEDIA', 'ALTA']
    campos_faltantes: List[str] = Field(default_factory=list)

helpdesk_chain = llm_helpdesk.with_structured_output(HelpdeskOut)

def triagem_helpdesk(mensagem: str) -> Dict:
    saida: HelpdeskOut = helpdesk_chain.invoke([
        SystemMessage(content=HELPDESK_PROMPT),
        HumanMessage(content=mensagem)
    ])
    return saida.model_dump()

testes = [
    "Meu computador está travando sempre que abro o Word.",
    "Esqueci a senha do Windows.",
    "A internet da empresa caiu toda, o que fazer?",
    "O mouse não está funcionando, mas eu tenho um reserva.",
    "Quero instalar um programa, mas não sei como."
]

for msg_teste in testes:
    print(f'Pergunta: {msg_teste}\nResposta: {triagem_helpdesk(msg_teste)}\n')